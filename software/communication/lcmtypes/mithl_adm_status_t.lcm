package mithl;

// set -1 if not known
struct adm_status_t
{
 int64_t utime;

 float current_motor[2];
 float current_battery[2];
 int32_t rpm[2];
 
 float case_temp;
 float temp[3];

 float voltage[3];

 boolean unexpected_ack;
 boolean receive_overflow;
 boolean watchdog_timeout;
 double last_received_setpoint;
 double watchdog_elapsed;

 // for the below flags, high bit is set if there's a parsing
 // error, so fault status is NOT KNOWN.

 // fault flags:
 // 0: overheat
 // 1: overvolt
 // 2: undervolt
 // 3: short circuit
 // 4: estop
 // 5: sepex excitation fault
 // 6: MOSFET fail
 // 7: startup config faul
 int16_t fault_flags;

 // runtime status flags per motor channel
 // 0: amps limit active
 // 1: motor stalled
 // 2: loop error
 // 3: safety stop
 // 4: forward limit
 // 5: reverse limit
 // 6: amps limit
 int16_t runtime_flags[2];

 // status flags
 // for non-Spektrum-supporting units:
 // 0: Serial mode
 // 1: Pulse mode
 // 2: analog mode
 // 3: power stage off
 // 4: Stall detected
 // 5: At limit
 // 6: <unused>
 // 7: Microbasic script running
 // for Spektrum-supporting units:
 // 0: Serial mode
 // 1: Pulse mode
 // 2: Analog mode
 // 3: Spektrum mode
 // 4: Power stage off
 // 5: Stall detected
 // 6: At limit
 // 7: Microbasic script running
 int16_t status_flags;

 string receive_buffer;
}